version: '3.5'

services:
  postgres:
    image: postgres:11.5-alpine
    command: postgres -c 'max_pred_locks_per_transaction=128' -c 'max_locks_per_transaction=128'
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '400k'
        max-file: '20'

  cardano-node:
    image: inputoutput/cardano-node:${CARDANO_NODE_VERSION:-1.24.2}
    environment:
      - NETWORK=${NETWORK:-mainnet}
    volumes:
      - node-db:/data/db
      - node-ipc:/ipc
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-db-sync:
    image: inputoutput/cardano-db-sync:${CARDANO_DB_SYNC_VERSION:-7.1.0}
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - db-sync-data:/var/lib/cdbsync
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-explorer-api:
    image: inputoutput/cardano-explorer-api:${CARDANO_EXPLORER_API_VERSION:-3.1.0}
    depends_on:
      - postgres
      - cardano-db-sync
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    ports:
      - 8100:8100
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  cardano-submit-api:
    image: inputoutput/cardano-submit-api:${CARDANO_SUBMIT_API_VERSION:-3.1.1}
    environment:
      - NETWORK=${NETWORK:-mainnet}
    depends_on:
      - cardano-node
    volumes:
      - node-ipc:/node-ipc
    ports:
      - 8090:8090
    restart: on-failure
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'

  nginx:
    image: nginx:1.19-alpine
    restart: unless-stopped
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    ports:
      - '80:8100'
      - '443:8100'
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

secrets:
  postgres_db:
    file: ./config/postgres_db
  postgres_password:
    file: ./config/postgres_password
  postgres_user:
    file: ./config/postgres_user

volumes:
  db-sync-data:
  postgres:
  node-db:
  node-ipc:
